version: '3'

volumes:
  advanced_django_blog_local_postgres_data: {}
  advanced_django_blog_local_postgres_data_backups: {}

services:
  django:
    build:
      context: .
      dockerfile: ./compose/local/django/Dockerfile
    image: advanced_django_blog_local_django
    container_name: advanced_django_blog_local_django
    depends_on:
      - postgres
      - mailhog
    volumes:
      - .:/app:z
    env_file:
      - ./.envs/.local/.django
      - ./.envs/.local/.postgres
    ports:
      - "8000:8000"
    command: /start

  postgres:
    build:
      context: .
      dockerfile: ./compose/production/postgres/Dockerfile
    image: advanced_django_blog_production_postgres
    container_name: advanced_django_blog_local_postgres
    volumes:
      - advanced_django_blog_local_postgres_data:/var/lib/postgresql/data
      - advanced_django_blog_local_postgres_data_backups:/backups
    env_file:
      - ./.envs/.local/.postgres

  pgadmin:
    container_name: pgadmin4_container
    image: dpage/pgadmin4
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: 1234
    ports:
      - "8010:80"

  docs:
    image: advanced_django_blog_local_docs
    container_name: advanced_django_blog_local_docs
    build:
      context: .
      dockerfile: ./compose/local/docs/Dockerfile
    env_file:
      - ./.envs/.local/.django
    volumes:
      - ./docs:/docs:z
      - ./config:/app/config:z
      - ./advanced_django_blog:/app/advanced_django_blog:z
    ports:
      - "9000:9000"
    command: /start-docs

  mailhog:
    image: mailhog/mailhog:v1.0.0
    container_name: advanced_django_blog_local_mailhog
    ports:
      - "8025:8025"
